trigger:
  batch: true
  branches:
    include:
      - develop
      - master

pr:
  branches:
    include:
      - develop
      - master

variables:
  npm_config_cache: '$(Pipeline.Workspace)/.npm'
  system.debug: 'true'

stages:
  - stage: 'Build_Angular'
    displayName: "Build Angular"
    jobs:
      - job: 'Build_Angular'
        displayName: 'Build Angular'
        strategy:
          matrix:
            windows:
              imageName: 'windows-latest'
            linux:
              imageName: 'ubuntu-latest'
        pool:
          vmImage: $(imageName)
        steps:
          - checkout: self
            fetchDepth: 0

          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '18.x'

          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              path: $(npm_config_cache)
              restoreKeys: |
                npm | "$(Agent.OS)"
            displayName: Cache NPM packages

          - script: |
              npm install -g @angular/cli@15.2.9
            displayName: 'Install Angular CLI'

          - script: |
              npm ci
            displayName: 'Npm CI'

          - script: |
              npm cache ls
              npm cache verify
            displayName: NPM Show cache

          - script: |
              npm run build
            displayName: 'NPM run build'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/az-pipeline-npm-cache'
              archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
              archiveFile: '$(Build.ArtifactStagingDirectory)/drop-$(imageName).zip'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop-$(imageName)' # from matrix
              publishLocation: 'Container'
