trigger:
  batch: true
  branches:
    include:
      - develop
      - master

pr:
  branches:
    include:
      - develop
      - master

variables:
  npm_config_cache: '$(Pipeline.Workspace)/.npm'
  system.debug: 'true'

stages:
  - stage: 'Build_Angular'
    displayName: "Build Angular"
    jobs:
      - job: 'Build_Angular'
        displayName: 'Build Angular'
        strategy:
          matrix:
            windows:
              imageName: 'windows-latest'
            linux:
              imageName: 'ubuntu-latest'
        pool:
          vmImage: $(imageName)
        steps:
          - checkout: self
            fetchDepth: 0

          - task: gitversion/setup@0
            displayName: 'GitVersion Setup'
            inputs:
              versionSpec: '5.9.x'

          - task: gitversion/execute@0
            displayName: 'GitVersion Execute'

          - bash: echo $Action$BuildVersion
            displayName: 'Set Build Version'
            env:
              Action: '##vso[build.updatebuildnumber]'
              BuildVersion: $(GitVersion.SemVer)

          - task: NodeTool@0
            displayName: 'Install Node.js'
            inputs:
              versionSpec: '18.x'

          - task: Cache@2
            inputs:
              key: 'npm | "$(Agent.OS)" | package-lock.json'
              path: $(npm_config_cache)
              restoreKeys: |
                npm | "$(Agent.OS)"
            displayName: Cache NPM packages

          - script: |
              npm install -g @angular/cli@15.2.9
            displayName: 'Install Angular CLI'

          - script: |
              npm ci
            displayName: 'Npm CI'

          - script: |
              npm cache ls
              npm cache verify
            displayName: NPM Show cache

          - script: |
              npm run build
            displayName: 'NPM run build'

          - task: ArchiveFiles@2
            inputs:
              rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist/az-pipeline-npm-cache'
              includeRootFolder: 'false'
              archiveType: 'zip' # 'zip' | '7z' | 'tar' | 'wim'. Required. Archive type. Default: zip.
              archiveFile: '$(Build.ArtifactStagingDirectory)/drop-$(imageName).zip'

          - task: PublishBuildArtifacts@1
            displayName: 'Publish Artifact: drop'
            inputs:
              PathtoPublish: '$(Build.ArtifactStagingDirectory)'
              ArtifactName: 'drop-$(imageName)' # from matrix
              publishLocation: 'Container'

  - stage: 'Deploy_Angular_IIS'
    displayName: 'Deploy_Angular_IIS'
    dependsOn: Build_Angular
    condition: succeeded('Build_Angular')
    jobs:
      - deployment: 'Deploy_Angular_IIS'
        displayName: 'Deploy_Angular_IIS'
        variables:
          - group: devtest.team_wildcard_certificate
          - group: IIS_Settings
        environment:
          name: dev
          resourceType: VirtualMachine
        strategy:
          runOnce:
            deploy:
              steps:
                - download: current
                  artifact: drop-windows-latest

                - task: IISWebAppManagementOnMachineGroup@0
                  displayName: 'Manage IIS WebSite'
                  inputs:
                    EnableIIS: true
                    IISDeploymentType: 'IISWebsite'
                    ActionIISWebsite: 'CreateOrUpdateWebsite'
                    WebsiteName: '$(IISSiteName)'
                    WebsitePhysicalPath: '$(IISPhysicalPath)'
                    AddBinding: true
                    Bindings: |
                      {
                          bindings: [
                            {
                              "protocol":"http",
                              "ipAddress":"*",
                              "hostname":"$(IISSiteHostName)",
                              "port":"80",
                              "sslThumbprint":"",
                              "sniFlag":true
                            },
                            {
                              "protocol":"https",
                              "ipAddress":"*",
                              "hostname":"$(IISSiteHostName)",
                              "port":"443",
                              "sslThumbprint":"$(certificate_thumbprint)",
                              "sniFlag":true
                            }
                          ]
                      }
                    CreateOrUpdateAppPoolForWebsite: true
                    ConfigureAuthenticationForWebsite: true
                    AppPoolNameForWebsite: '$(IISSiteName)'
                    DotNetVersionForWebsite: 'No Managed Code'
                    PipeLineModeForWebsite: 'Integrated'
                    AppPoolIdentityForWebsite: 'ApplicationPoolIdentity'
                    AnonymousAuthenticationForWebsite: true
                    BasicAuthenticationForWebsite: false
                    WindowsAuthenticationForWebsite: false

                - task: IISWebAppDeploymentOnMachineGroup@0
                  displayName: 'Deploy IIS Website'
                  inputs:
                    WebSiteName: '$(IISSiteName)'
                    TakeAppOfflineFlag: true
                    Package: '$(Pipeline.Workspace)/drop/Release/*.zip'
                    JSONFiles: '**/appsettings.json'
